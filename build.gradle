plugins {
    id 'eclipse'
    id 'idea'
    id 'net.minecraftforge.gradle' version '[6.0,6.2)'
    id 'maven-publish'
}

version = mod_version
group = mod_group_id
archivesBaseName = mod_id

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

minecraft {
    mappings channel: mapping_channel, version: mapping_version

    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    copyIdeResources = true

    runs {
    	configureEach {
    		workingDirectory project.file('run')

    		property 'forge.logging.markers', 'REGISTRIES'
    		property 'forge.logging.console.level', 'debug'

    		mods {
    			"${mod_id}" {
    				source sourceSets.main
    			}
    		}
    	}
        client {
            property 'forge.enabledGameTestNamespaces', mod_id
        }

        server {
            property 'forge.enabledGameTestNamespaces', mod_id
        }

        gameTestServer {
            property 'forge.enabledGameTestNamespaces', mod_id
        }

        data {
        	workingDirectory project.file('run-data')
      
      		property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
      
      		property 'forge.logging.console.level', 'debug'
      
      		args '--mod', mod_id, '--all', '--existing', file('src/main/resources').toString(), '--existing', file('src/generated/resources').toString(), '--output', file('src/generated/resources/')
        }
    }
}

sourceSets.main.resources {
	srcDir 'src/generated/resources'
}

repositories {
	
}

dependencies {
    minecraft 'net.minecraftforge:forge:1.20.1-47.1.0'
}

tasks.named('jar', Jar).configure {
	finalizedBy 'reobfJar'

	from sourceSets.main.output.classesDirs
	from sourceSets.main.output.resourcesDir

	manifest {
		attributes([
			"Specification-Title"	: mod_id,
			"Specification-Vendor"	: "noteswiper",
			"Specification-Version"	: "1",
			"Implementation-Title"	: project.name,
			"Implementation-Version": project.jar.archiveVersion,
			"Implementation-Vendor"	: "noteswiper",
			"Implementation-Timestamp"	: new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
		])
	}
}


tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8' // Use the UTF-8 charset for Java compilation
}

apply from: 'mcreator.gradle'

